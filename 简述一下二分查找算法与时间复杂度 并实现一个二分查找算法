二分查找是针对有序数组来寻找特定元素的一种算法，它主要分为以下三个步骤：
1.根据当前左右边界 计算出中间元素下标 锁定当前数组的中间元素
2.将中间元素与目标值比较大小 目标值较大 则需要在中间元素右边来寻找 缩小范围 改变搜素左边界 反之改变数组右边界
3.重复第二步 直到找到目标值 或者一直没找到 左右边界重合 退出循环  返回-1

时间复杂度：O（logn）

实现：
var halfSearch = function (arr,target){
      let left = 0,right = arr.length-1,midIndex,mid;
      while(left<=right){
           midIndex = left + Math.floor((right-left)/2);
           mid = arr[midIndex];
           if(mid<target){
              left = mid+1;
           }else if(mid>target){
              right = mid-1;
           }else{
             return midIndex;
           }
      }
      return -1;
}
             
